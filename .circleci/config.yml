version: 2.1

orbs:
  changelog: ory/changelog@0.0.5
  sdk: ory/sdk@0.1.13

jobs:
  format:
    docker:
    - image: circleci/golang:1.12
    working_directory: /go/src/github.com/ory/oathkeeper
    steps:
      # This is disabled for now because goimports is really slow when go modules are used, see
      # https://github.com/golang/go/issues/27287
      #
      #      - run:
      #          name: Enable go1.12 modules
      #          command: |
      #            echo 'export GO111MODULE=on' >> $BASH_ENV
      #            source $BASH_ENV
      - checkout
      - run:
          name: Enable go1.12 modules
          command: |
            echo 'export GO111MODULE=on' >> $BASH_ENV
            source $BASH_ENV
      - run: curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin latest
      - run: go mod download
      - run: golangci-lint run ./...

#  swagger:
#    docker:
#      - image: circleci/golang:1.12
#    working_directory: /go/src/github.com/ory/oathkeeper
#    steps:
#      - checkout
#      - run: curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
#      - run: go get -u github.com/go-swagger/go-swagger/cmd/swagger golang.org/x/tools/cmd/goimports
#      - run: dep ensure -vendor-only
#      - run: ./scripts/run-genswag.sh

  test:
    docker:
      - image: circleci/golang:1.12
        environment:
        - GO111MODULE=on
    working_directory: /go/src/github.com/ory/oathkeeper
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: |
            ./.circleci/release_name.bash
            echo 'export DOCKER_SHORT_TAG=$CIRCLE_SHA1' >> $BASH_ENV
            source $BASH_ENV
      - run: go mod download
      - run: go install github.com/ory/go-acc github.com/mattn/goveralls
      - run: go-acc -o coverage.txt ./... -- -failfast -timeout=20m
      - run: test -z "$CIRCLE_PR_NUMBER" && goveralls -service=circle-ci -coverprofile=coverage.txt -repotoken=$COVERALLS_REPO_TOKEN || echo "forks are not allowed to push to coveralls"
      - run: ./test/e2e/run.sh
      - run: ./test/reload/run.sh
      - run: curl -sL https://git.io/goreleaser | bash -s -- --snapshot --skip-publish --rm-dist

  release:
    docker:
      - image: circleci/golang:1.12
        environment:
          - GO111MODULE=on
    working_directory: /go/src/github.com/ory/oathkeeper
    steps:
      - checkout
      - run:
          command: |
            echo 'export DOCKER_FULL_TAG=$(echo $CIRCLE_TAG | tr '+' '_')' >> $BASH_ENV
            echo 'export DOCKER_SHORT_TAG=$(echo $CIRCLE_TAG | cut -d '+' -f1)' >> $BASH_ENV
            ./.circleci/release_name.bash
            source $BASH_ENV
      - setup_remote_docker
      - run: docker login --username "$DOCKER_USERNAME" --password "$DOCKER_PASSWORD"
      - run: curl -sL https://git.io/goreleaser | bash

  docs:
    docker:
      - image: circleci/golang:1.12
    working_directory: /go/src/github.com/ory/oathkeeper
    steps:
      - checkout
      - run: git config --global user.email "hi@ory.am"
      - run: git config --global user.name "ORY Continuous Integration"
      - run: "git clone https://arekkas:$DOCS_TOKEN_PUSH@github.com/ory/docs.git ../docs"
      - run: "cp ./.schemas/config.schema.json ../docs/schemas/oathkeeper.config.schema.json"
      - run: "(cd ../docs && git add -A && git commit -a -m \"Update ORY Oathkeeper Swagger and JSON Schemas\" && git push origin) || exit 0"

workflows:
  version: 2
  "test, build, and relase":
    jobs:
      - format:
          filters:
            tags:
              only: /.*/
      - test:
          filters:
            tags:
              only: /.*/
      - docs:
          filters:
            branches:
              only: master
      - release:
          requires:
            - test
            - format
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - changelog/generate:
          requires:
            - test
            - format
          filters:
            tags:
              only: /.*/
            branches:
              only: master
      - sdk/generate:
          appname: Ory_Oathkeeper
          requires:
            - test
            - format
      - sdk/release:
          requires:
            - test
            - format
            - release
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
